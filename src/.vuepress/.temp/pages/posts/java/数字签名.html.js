export const data = JSON.parse("{\"key\":\"v-5da32946\",\"path\":\"/posts/java/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D.html\",\"title\":\"数字签名\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"数字签名\",\"author\":\"郑天祺\",\"tag\":[\"可信\",\"加密算法\"],\"category\":[\"可信\"],\"date\":\"2019-09-01T20:23:00.000Z\",\"description\":\"一、数字签名概念 ​\\t数字签名技术是消息传递进行加密获得的签名。如HTTP请求时将请求体加密。数字签名可以用于证实数字内容的完整性和来源。常见的数字签名算法：椭圆曲线数字签名算法。。。 二、数字签名的流程 （1）椭圆曲线数字签名算法: 生成数字签名 获取消息m的数字摘要Hm 即 Hm = h(m);; 使用RFC6979协议，通过私钥pk和m生成确定随机数k; 计算R = k * G，其中R为曲线上的一点，取其横坐标r作为数字签名的一部分，然后计算s，即s = (Hm + r * pk) / k; 得到消息m的数字签名为Sig = &lt;r, s&gt;\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://zhengtianqi.gitee.io/blog-vue/posts/java/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"郑天祺的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"数字签名\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"一、数字签名概念 ​\\t数字签名技术是消息传递进行加密获得的签名。如HTTP请求时将请求体加密。数字签名可以用于证实数字内容的完整性和来源。常见的数字签名算法：椭圆曲线数字签名算法。。。 二、数字签名的流程 （1）椭圆曲线数字签名算法: 生成数字签名 获取消息m的数字摘要Hm 即 Hm = h(m);; 使用RFC6979协议，通过私钥pk和m生成确定随机数k; 计算R = k * G，其中R为曲线上的一点，取其横坐标r作为数字签名的一部分，然后计算s，即s = (Hm + r * pk) / k; 得到消息m的数字签名为Sig = &lt;r, s&gt;\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-06-10T12:47:14.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"郑天祺\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"可信\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"加密算法\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-09-01T20:23:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-06-10T12:47:14.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"数字签名\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2019-09-01T20:23:00.000Z\\\",\\\"dateModified\\\":\\\"2023-06-10T12:47:14.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"郑天祺\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"（1）椭圆曲线数字签名算法:\",\"slug\":\"_1-椭圆曲线数字签名算法\",\"link\":\"#_1-椭圆曲线数字签名算法\",\"children\":[{\"level\":3,\"title\":\"生成数字签名\",\"slug\":\"生成数字签名\",\"link\":\"#生成数字签名\",\"children\":[]},{\"level\":3,\"title\":\"验证数字签名\",\"slug\":\"验证数字签名\",\"link\":\"#验证数字签名\",\"children\":[]},{\"level\":3,\"title\":\"验证方法解释\",\"slug\":\"验证方法解释\",\"link\":\"#验证方法解释\",\"children\":[]},{\"level\":3,\"title\":\"原理解释：\",\"slug\":\"原理解释\",\"link\":\"#原理解释\",\"children\":[]}]},{\"level\":2,\"title\":\"（2）Schnorr数字签名算法\",\"slug\":\"_2-schnorr数字签名算法\",\"link\":\"#_2-schnorr数字签名算法\",\"children\":[{\"level\":3,\"title\":\"生成数字签名\",\"slug\":\"生成数字签名-1\",\"link\":\"#生成数字签名-1\",\"children\":[]},{\"level\":3,\"title\":\"验证数字签名\",\"slug\":\"验证数字签名-1\",\"link\":\"#验证数字签名-1\",\"children\":[]},{\"level\":3,\"title\":\"验证方法解释\",\"slug\":\"验证方法解释-1\",\"link\":\"#验证方法解释-1\",\"children\":[]}]}],\"git\":{\"createdTime\":1686401234000,\"updatedTime\":1686401234000,\"contributors\":[{\"name\":\"zhengtianqi\",\"email\":\"270490096@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":1.7,\"words\":509},\"filePathRelative\":\"posts/java/数字签名.md\",\"localizedDate\":\"2019年9月2日\",\"excerpt\":\"<h1> 一、数字签名概念</h1>\\n<p>​\\t数字签名技术是消息传递进行加密获得的签名。如HTTP请求时将请求体加密。数字签名可以用于证实数字内容的完整性和来源。常见的数字签名算法：<strong>椭圆曲线数字签名算法</strong>。。。</p>\\n<h1> 二、数字签名的流程</h1>\\n<h2> （1）椭圆曲线数字签名算法:</h2>\\n<h3> 生成数字签名</h3>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code>获取消息m的数字摘要<span class=\\\"token class-name\\\">Hm</span> 即 <span class=\\\"token class-name\\\">Hm</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">h</span><span class=\\\"token punctuation\\\">(</span>m<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n使用<span class=\\\"token constant\\\">RFC6979</span>协议，通过私钥pk和m生成确定随机数k<span class=\\\"token punctuation\\\">;</span>\\n计算<span class=\\\"token class-name\\\">R</span> <span class=\\\"token operator\\\">=</span> k <span class=\\\"token operator\\\">*</span> <span class=\\\"token class-name\\\">G</span>，其中<span class=\\\"token class-name\\\">R</span>为曲线上的一点，取其横坐标r作为数字签名的一部分，然后计算s，即s <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Hm</span> <span class=\\\"token operator\\\">+</span> r <span class=\\\"token operator\\\">*</span> pk<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> k<span class=\\\"token punctuation\\\">;</span>\\n得到消息m的数字签名为<span class=\\\"token class-name\\\">Sig</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span>r<span class=\\\"token punctuation\\\">,</span> s<span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
