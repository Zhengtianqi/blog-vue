export const data = JSON.parse("{\"key\":\"v-56c522dd\",\"path\":\"/posts/database/mysql%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%8F%8A%E4%BC%98%E5%8C%96.html\",\"title\":\"mysql表设计及优化\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"mysql表设计及优化\",\"author\":\"郑天祺\",\"tag\":[\"mysql\"],\"category\":[\"数据库\"],\"date\":\"2019-08-31T15:28:00.000Z\",\"description\":\"一、一些建议 建议来自《MYSQL 王者晋级之路》，本文做些笔记 1）在创建业务表时，库名、表名、字段名必须使用小写字母，采用 “_” 分割。 2）MySQL数据库中，通过lower_case_table_names参数来区别表名的大小写，默认为0，代表大小写敏感。如果是1，代表大小写不敏感，以小写存储。为字段选取数据类型时，要秉承着简单、够用的原则。表中的字段和索引数量都不宜过多，要保证SQL语句查询的高效性，快速执行完，避免出现堵塞、排队现象。 3）表的存储引擎一定要选择使用InnoDB。MySQL 5.7基本已经废弃 MyISAM，8.0后彻底废弃。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://zhengtianqi.gitee.io/blog-vue/posts/database/mysql%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%8F%8A%E4%BC%98%E5%8C%96.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"郑天祺的博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"mysql表设计及优化\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"一、一些建议 建议来自《MYSQL 王者晋级之路》，本文做些笔记 1）在创建业务表时，库名、表名、字段名必须使用小写字母，采用 “_” 分割。 2）MySQL数据库中，通过lower_case_table_names参数来区别表名的大小写，默认为0，代表大小写敏感。如果是1，代表大小写不敏感，以小写存储。为字段选取数据类型时，要秉承着简单、够用的原则。表中的字段和索引数量都不宜过多，要保证SQL语句查询的高效性，快速执行完，避免出现堵塞、排队现象。 3）表的存储引擎一定要选择使用InnoDB。MySQL 5.7基本已经废弃 MyISAM，8.0后彻底废弃。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-06-10T12:47:14.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"郑天祺\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"mysql\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-08-31T15:28:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-06-10T12:47:14.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"mysql表设计及优化\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2019-08-31T15:28:00.000Z\\\",\\\"dateModified\\\":\\\"2023-06-10T12:47:14.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"郑天祺\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"一、一些建议\",\"slug\":\"一、一些建议\",\"link\":\"#一、一些建议\",\"children\":[]},{\"level\":2,\"title\":\"二、算是面试题吧\",\"slug\":\"二、算是面试题吧\",\"link\":\"#二、算是面试题吧\",\"children\":[{\"level\":3,\"title\":\"1）为什么一定要设一个主键？\",\"slug\":\"_1-为什么一定要设一个主键\",\"link\":\"#_1-为什么一定要设一个主键\",\"children\":[]},{\"level\":3,\"title\":\"2）主键是自增还是UUID?\",\"slug\":\"_2-主键是自增还是uuid\",\"link\":\"#_2-主键是自增还是uuid\",\"children\":[]},{\"level\":3,\"title\":\"3）主键为什么不推荐有业务含义？\",\"slug\":\"_3-主键为什么不推荐有业务含义\",\"link\":\"#_3-主键为什么不推荐有业务含义\",\"children\":[]},{\"level\":3,\"title\":\"5）为什么不直接存储图片、音频、视频等大容量内容？\",\"slug\":\"_5-为什么不直接存储图片、音频、视频等大容量内容\",\"link\":\"#_5-为什么不直接存储图片、音频、视频等大容量内容\",\"children\":[]},{\"level\":3,\"title\":\"6）字段为什么要定义NOT NULL DEFAULT ?\",\"slug\":\"_6-字段为什么要定义not-null-default\",\"link\":\"#_6-字段为什么要定义not-null-default\",\"children\":[]},{\"level\":3,\"title\":\"7）看建表语法\",\"slug\":\"_7-看建表语法\",\"link\":\"#_7-看建表语法\",\"children\":[]},{\"level\":3,\"title\":\"8）Mysql存储引擎\",\"slug\":\"_8-mysql存储引擎\",\"link\":\"#_8-mysql存储引擎\",\"children\":[]},{\"level\":3,\"title\":\"9）常用的2种存储引擎？\",\"slug\":\"_9-常用的2种存储引擎\",\"link\":\"#_9-常用的2种存储引擎\",\"children\":[]},{\"level\":3,\"title\":\"10）可以针对表设置引擎吗？如何设置？\",\"slug\":\"_10-可以针对表设置引擎吗-如何设置\",\"link\":\"#_10-可以针对表设置引擎吗-如何设置\",\"children\":[]},{\"level\":3,\"title\":\"11）选择合适的存储引擎？\",\"slug\":\"_11-选择合适的存储引擎\",\"link\":\"#_11-选择合适的存储引擎\",\"children\":[]},{\"level\":3,\"title\":\"12）选择合适的数据类型\",\"slug\":\"_12-选择合适的数据类型\",\"link\":\"#_12-选择合适的数据类型\",\"children\":[]},{\"level\":3,\"title\":\"13）char & varchar\",\"slug\":\"_13-char-varchar\",\"link\":\"#_13-char-varchar\",\"children\":[]},{\"level\":3,\"title\":\"14）Mysql字符集\",\"slug\":\"_14-mysql字符集\",\"link\":\"#_14-mysql字符集\",\"children\":[]},{\"level\":3,\"title\":\"15）索引设计原则？\",\"slug\":\"_15-索引设计原则\",\"link\":\"#_15-索引设计原则\",\"children\":[]},{\"level\":3,\"title\":\"16）MySql有哪些索引?\",\"slug\":\"_16-mysql有哪些索引\",\"link\":\"#_16-mysql有哪些索引\",\"children\":[]},{\"level\":3,\"title\":\"17）Hash索引和B+树索引的底层实现原理\",\"slug\":\"_17-hash索引和b-树索引的底层实现原理\",\"link\":\"#_17-hash索引和b-树索引的底层实现原理\",\"children\":[]},{\"level\":3,\"title\":\"18）非聚簇索引一定会回表查询吗?\",\"slug\":\"_18-非聚簇索引一定会回表查询吗\",\"link\":\"#_18-非聚簇索引一定会回表查询吗\",\"children\":[]},{\"level\":3,\"title\":\"19）如何避免回表查询？什么是索引覆盖？\",\"slug\":\"_19-如何避免回表查询-什么是索引覆盖\",\"link\":\"#_19-如何避免回表查询-什么是索引覆盖\",\"children\":[]},{\"level\":3,\"title\":\"20）事务4个特性？\",\"slug\":\"_20-事务4个特性\",\"link\":\"#_20-事务4个特性\",\"children\":[]},{\"level\":3,\"title\":\"21）事务隔离级别分别是？\",\"slug\":\"_21-事务隔离级别分别是\",\"link\":\"#_21-事务隔离级别分别是\",\"children\":[]},{\"level\":3,\"title\":\"22）InnoDB默认事务隔离级别?如何查看当前隔离级别\",\"slug\":\"_22-innodb默认事务隔离级别-如何查看当前隔离级别\",\"link\":\"#_22-innodb默认事务隔离级别-如何查看当前隔离级别\",\"children\":[]},{\"level\":3,\"title\":\"23）如何查看表结构？\",\"slug\":\"_23-如何查看表结构\",\"link\":\"#_23-如何查看表结构\",\"children\":[]},{\"level\":3,\"title\":\"24）Mysql删除表的几种方式？区别？\",\"slug\":\"_24-mysql删除表的几种方式-区别\",\"link\":\"#_24-mysql删除表的几种方式-区别\",\"children\":[]},{\"level\":3,\"title\":\"25）主键和唯一索引区别？\",\"slug\":\"_25-主键和唯一索引区别\",\"link\":\"#_25-主键和唯一索引区别\",\"children\":[]},{\"level\":3,\"title\":\"26、查看当前表有哪些索引？\",\"slug\":\"_26、查看当前表有哪些索引\",\"link\":\"#_26、查看当前表有哪些索引\",\"children\":[]},{\"level\":3,\"title\":\"27、索引不生效的情况？\",\"slug\":\"_27、索引不生效的情况\",\"link\":\"#_27、索引不生效的情况\",\"children\":[]},{\"level\":3,\"title\":\"28、explain列有哪些？含义？\",\"slug\":\"_28、explain列有哪些-含义\",\"link\":\"#_28、explain列有哪些-含义\",\"children\":[]},{\"level\":3,\"title\":\"29、MySql最多创建多少列索引？\",\"slug\":\"_29、mysql最多创建多少列索引\",\"link\":\"#_29、mysql最多创建多少列索引\",\"children\":[]},{\"level\":3,\"title\":\"30、varchar(10)和int(10)代表什么含义\",\"slug\":\"_30、varchar-10-和int-10-代表什么含义\",\"link\":\"#_30、varchar-10-和int-10-代表什么含义\",\"children\":[]},{\"level\":3,\"title\":\"31、count(*)在不同引擎的实现方式?\",\"slug\":\"_31、count-在不同引擎的实现方式\",\"link\":\"#_31、count-在不同引擎的实现方式\",\"children\":[]}]},{\"level\":2,\"title\":\"三、数据结构\",\"slug\":\"三、数据结构\",\"link\":\"#三、数据结构\",\"children\":[]}],\"git\":{\"createdTime\":1686401234000,\"updatedTime\":1686401234000,\"contributors\":[{\"name\":\"zhengtianqi\",\"email\":\"270490096@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":18.22,\"words\":5467},\"filePathRelative\":\"posts/database/mysql表设计及优化.md\",\"localizedDate\":\"2019年8月31日\",\"excerpt\":\"<h2> 一、一些建议</h2>\\n<p>建议来自《MYSQL 王者晋级之路》，本文做些笔记</p>\\n<p>1）在创建业务表时，库名、表名、字段名必须使用小写字母，采用 “_” 分割。</p>\\n<p>2）MySQL数据库中，通过lower_case_table_names参数来区别表名的大小写，默认为0，代表大小写敏感。如果是1，代表大小写不敏感，以小写存储。为字段选取数据类型时，要秉承着简单、够用的原则。表中的字段和索引数量都不宜过多，要保证SQL语句查询的高效性，快速执行完，避免出现堵塞、排队现象。</p>\\n<p>3）表的存储引擎一定要选择使用InnoDB。MySQL 5.7基本已经废弃 MyISAM，8.0后彻底废弃。</p>\",\"autoDesc\":true}")
