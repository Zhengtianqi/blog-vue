import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,a as n}from"./app-0ce632a0.js";const i="/blog-vue/assets/images/Yarn.png",o={},t=n('<h1 id="一、组件介绍" tabindex="-1"><a class="header-anchor" href="#一、组件介绍" aria-hidden="true">#</a> 一、组件介绍</h1><p>​ Yarn的基本思想是将 JobTracker 的资源管理和作业的调度/监控两大主要职能拆分为两个独立的进程：</p><p>​ a. 一个全局的 Resource Manager</p><p>​ b. 每个应用对应的 Application Master（AM）</p><p>​ Resource Manager 和每个节点上的 Node Manager（NM）组成了全新的通用操作系统，以分布式的方式管理应用程序。</p><p>​ Resource Manager拥有为系统中所有应用分配资源的决定权。与之相关的是应用程序的Application Master，负责与Resource Manager协商资源，并与Node Manager协同工作来执行和监控任务。</p><figure><img src="'+i+'" alt="image-20191218091838954" tabindex="0" loading="lazy"><figcaption>image-20191218091838954</figcaption></figure><h2 id="_1-resource-manager" tabindex="-1"><a class="header-anchor" href="#_1-resource-manager" aria-hidden="true">#</a> （1）Resource Manager</h2><p>​ Yarn Resource Manager是一个纯粹的调度器，它负责整个系统的资源管理和分配。它本身主要由两个组件构成：调度器（Scheduler）和应用程序管理器（Applications Manager，AM）。</p><p>​ 调度器根据容量、队列等限制条件，将系统中的资源分配给各个正在运行的应用程序。</p><p>注意：该调度器是一个“纯调度器”，他不再从事任何与具体应用程序相关的工作</p><h2 id="_2-application-master" tabindex="-1"><a class="header-anchor" href="#_2-application-master" aria-hidden="true">#</a> （2）Application Master</h2><p>​ Application Master实际上是特定框架库的一个实例，负责与 Resource Manager协商资源，并和Resource Manager协同工作来 执行和监控Container，以及它们的资源消耗。</p><h2 id="_3-node-manager" tabindex="-1"><a class="header-anchor" href="#_3-node-manager" aria-hidden="true">#</a> （3）Node Manager</h2><p>​ Node Manager 是每个节点的框架代理。她负责启动应用的Container，监控Container的资源使用（包括CPU、内存、硬盘和网络带宽等），并把这些信息汇报给调度器。</p><h2 id="_4-resource-request-和-container" tabindex="-1"><a class="header-anchor" href="#_4-resource-request-和-container" aria-hidden="true">#</a> （4）Resource Request 和 Container</h2><p>​ Yarn 被设计成可以允许应用程序（通过 Application Master） 以共享的、安全的，以及多用租户的方式使用集群的资源。它也会感知集群的网络拓扑，一边可以有效地调度，以及优化数据访问。</p><h1 id="二、yarn工作流程" tabindex="-1"><a class="header-anchor" href="#二、yarn工作流程" aria-hidden="true">#</a> 二、Yarn工作流程</h1><p>​ （1）客户端提交 MapReduce作业</p><p>​ （2）Yarn 资源管理器负责协调集群上计算资源的分配</p><p>​ （3）Yarn 节点管理器（Node Manager）负责启动和监视集群中机器上的计算容器（Container）</p><p>​ （4）应用程序的 Master 负责协调运行 MapReduce 作业的任务，它和MapReduce 任务在容器中运行，这些同期由资源管理器分配对节点管理器进行管理</p><p>​ （5）分布式文件系统（HDFS）用来与其他实体间共享作业文件</p>',23),c=[t];function p(s,d){return e(),r("div",null,c)}const g=a(o,[["render",p],["__file","Yarn概述.html.vue"]]);export{g as default};
