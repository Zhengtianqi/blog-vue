import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,a as e}from"./app-0ce632a0.js";const o="/blog-vue/assets/images/image-20211014175135307.png",p={},t=e(`<h1 id="一、查看当前mysql所有的进程" tabindex="-1"><a class="header-anchor" href="#一、查看当前mysql所有的进程" aria-hidden="true">#</a> 一、查看当前Mysql所有的进程</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>show full processlist<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="二、查看mysql的最大缓存" tabindex="-1"><a class="header-anchor" href="#二、查看mysql的最大缓存" aria-hidden="true">#</a> 二、查看Mysql的最大缓存</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>show global variables like <span class="token string">&quot;global max_allowed_packet&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="三、查看当前正在进行的事务" tabindex="-1"><a class="header-anchor" href="#三、查看当前正在进行的事务" aria-hidden="true">#</a> 三、查看当前正在进行的事务</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>select <span class="token operator">*</span> from information_schema<span class="token punctuation">.</span><span class="token constant">INNODB_TRX</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="四、查看当前mysql的连接数" tabindex="-1"><a class="header-anchor" href="#四、查看当前mysql的连接数" aria-hidden="true">#</a> 四、查看当前Mysql的连接数</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>show status like &#39;thread<span class="token operator">%</span>&#39;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="五、查看慢sql的开启状态和日志" tabindex="-1"><a class="header-anchor" href="#五、查看慢sql的开启状态和日志" aria-hidden="true">#</a> 五、查看慢sql的开启状态和日志</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>show variables like &#39;slow_query<span class="token operator">%</span>&#39;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="image-20211014175135307" tabindex="0" loading="lazy"><figcaption>image-20211014175135307</figcaption></figure><p>显示已开启慢sql的日志：去服务器上查询慢sql</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>tail <span class="token operator">-</span>n <span class="token number">100</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>slow<span class="token punctuation">.</span>log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="六、查看mysql错误日志" tabindex="-1"><a class="header-anchor" href="#六、查看mysql错误日志" aria-hidden="true">#</a> 六、查看mysql错误日志</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#<span class="token number">1.</span>查找错误日志位置
grep log_error <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf
<span class="token operator">&gt;</span> log_error <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>error<span class="token punctuation">.</span>log                          # 数据库错误日志文件
#<span class="token number">2.</span>打开错误日志进行查看
tail <span class="token operator">-</span>n <span class="token number">100</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>error<span class="token punctuation">.</span>log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="附录" tabindex="-1"><a class="header-anchor" href="#附录" aria-hidden="true">#</a> 附录</h1><p>mysql5.7.34-log 简单的配置文件注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">[</span>root<span class="token annotation punctuation">@i</span><span class="token operator">-</span>jp6npxh6 <span class="token operator">~</span><span class="token punctuation">]</span># vi <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf
port <span class="token operator">=</span> <span class="token number">3306</span>                                    # <span class="token class-name">MySQL</span>监听端口
basedir <span class="token operator">=</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>mysql                      # <span class="token class-name">MySQL</span>安装根目录
datadir <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data                      # <span class="token class-name">MySQL</span>数据文件所在位置
tmpdir  <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>tmp                                  # 临时目录，比如load data infile会用到
socket <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock        # 为<span class="token class-name">MySQL</span>客户端程序和服务器之间的本地通讯指定一个套接字文件
pid<span class="token operator">-</span>file <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>mysql<span class="token punctuation">.</span>pid      # pid文件所在目录
skip_name_resolve <span class="token operator">=</span> <span class="token number">1</span>                          # 只能用<span class="token constant">IP</span>地址检查客户端的登录，不用主机名
character<span class="token operator">-</span>set<span class="token operator">-</span>server <span class="token operator">=</span> utf8mb4                  # 数据库默认字符集<span class="token punctuation">,</span>主流字符集支持一些特殊表情符号（特殊表情符占用<span class="token number">4</span>个字节）
transaction_isolation <span class="token operator">=</span> <span class="token constant">READ</span><span class="token operator">-</span><span class="token constant">COMMITTED</span>          # 事务隔离级别，默认为可重复读，<span class="token class-name">MySQL</span>默认可重复读级别
collation<span class="token operator">-</span>server <span class="token operator">=</span> utf8mb4_general_ci          # 数据库字符集对应一些排序等规则，注意要和character<span class="token operator">-</span>set<span class="token operator">-</span>server对应
init_connect<span class="token operator">=</span>&#39;<span class="token constant">SET</span> <span class="token constant">NAMES</span> utf8mb4&#39;                # 设置client连接mysql时的字符集<span class="token punctuation">,</span>防止乱码
lower_case_table_names <span class="token operator">=</span> <span class="token number">1</span>                      # 是否对sql语句大小写敏感，<span class="token number">1</span>表示不敏感
max_connections <span class="token operator">=</span> <span class="token number">400</span>                          # 最大连接数
max_connect_errors <span class="token operator">=</span> <span class="token number">1000</span>                      # 最大错误连接数
explicit_defaults_for_timestamp <span class="token operator">=</span> <span class="token boolean">true</span>          # <span class="token constant">TIMESTAMP</span>如果没有显示声明<span class="token constant">NOT</span> <span class="token constant">NULL</span>，允许<span class="token constant">NULL</span>值
max_allowed_packet <span class="token operator">=</span> <span class="token number">128</span>M                      # <span class="token constant">SQL</span>数据包发送的大小，如果有<span class="token constant">BLOB</span>对象建议修改成<span class="token number">1</span>G
interactive_timeout <span class="token operator">=</span> <span class="token number">1800</span>                      # <span class="token class-name">MySQL</span>连接闲置超过一定时间后<span class="token punctuation">(</span>单位：秒<span class="token punctuation">)</span>将会被强行关闭
wait_timeout <span class="token operator">=</span> <span class="token number">1800</span>                            # <span class="token class-name">MySQL</span>默认的wait_timeout值为<span class="token number">8</span>个小时<span class="token punctuation">,</span> interactive_timeout参数需要同时配置才能生效
tmp_table_size <span class="token operator">=</span> <span class="token number">16</span>M                            # 内部内存临时表的最大值 ，设置成<span class="token number">128</span>M；比如大数据量的group by <span class="token punctuation">,</span>order by时可能用到临时表；超过了这个值将写入磁盘，系统<span class="token constant">IO</span>压力增大
max_heap_table_size <span class="token operator">=</span> <span class="token number">128</span>M                      # 定义了用户可以创建的内存表<span class="token punctuation">(</span>memory table<span class="token punctuation">)</span>的大小
query_cache_size <span class="token operator">=</span> <span class="token number">0</span>                            # 禁用mysql的缓存查询结果集功能；后期根据业务情况测试决定是否开启；大部分情况下关闭下面两项
query_cache_type <span class="token operator">=</span> <span class="token number">0</span>

# 用户进程分配到的内存设置，每个session将会分配参数设置的内存大小
read_buffer_size <span class="token operator">=</span> <span class="token number">2</span>M                          # <span class="token class-name">MySQL</span>读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，<span class="token class-name">MySQL</span>会为它分配一段内存缓冲区。
read_rnd_buffer_size <span class="token operator">=</span> <span class="token number">8</span>M                      # <span class="token class-name">MySQL</span>的随机读缓冲区大小
sort_buffer_size <span class="token operator">=</span> <span class="token number">8</span>M                          # <span class="token class-name">MySQL</span>执行排序使用的缓冲大小
binlog_cache_size <span class="token operator">=</span> <span class="token number">1</span>M                          # 一个事务，在没有提交的时候，产生的日志，记录到<span class="token class-name">Cache</span>中；等到事务提交需要提交的时候，则把日志持久化到磁盘。默认binlog_cache_size大小<span class="token number">32</span>K

back_log <span class="token operator">=</span> <span class="token number">130</span>                                  # 在<span class="token class-name">MySQL</span>暂时停止响应新请求之前的短时间内多少个请求可以被存在堆栈中；官方建议back_log <span class="token operator">=</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token punctuation">(</span>max_connections <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>封顶数为<span class="token number">900</span>

# 日志设置
log_error <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>error<span class="token punctuation">.</span>log                          # 数据库错误日志文件
slow_query_log <span class="token operator">=</span> <span class="token number">1</span>                              # 慢查询sql日志设置
long_query_time <span class="token operator">=</span> <span class="token number">1</span>                            # 慢查询时间；超过<span class="token number">1</span>秒则为慢查询
slow_query_log_file <span class="token operator">=</span> <span class="token operator">/</span>dev<span class="token operator">/</span>vdc1<span class="token operator">/</span>home<span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>log<span class="token operator">/</span>slow<span class="token punctuation">.</span>log                  # 慢查询日志文件
log_queries_not_using_indexes <span class="token operator">=</span> <span class="token number">1</span>              # 检查未使用到索引的sql
log_throttle_queries_not_using_indexes <span class="token operator">=</span> <span class="token number">5</span>      # 用来表示每分钟允许记录到slow log的且未使用索引的<span class="token constant">SQL</span>语句次数。该值默认为<span class="token number">0</span>，表示没有限制
min_examined_row_limit <span class="token operator">=</span> <span class="token number">100</span>                    # 检索的行数必须达到此值才可被记为慢查询，查询检查返回少于该参数指定行的<span class="token constant">SQL</span>不被记录到慢查询日志
expire_logs_days <span class="token operator">=</span> <span class="token number">5</span>                            # <span class="token class-name">MySQL</span> binlog日志文件保存的过期时间，过期后自动删除

# 主从复制设置
# log<span class="token operator">-</span>bin <span class="token operator">=</span> mysql<span class="token operator">-</span>bin                            # 开启mysql binlog功能
# binlog_format <span class="token operator">=</span> <span class="token constant">ROW</span>                            # binlog记录内容的方式，记录被操作的每一行
# binlog_row_image <span class="token operator">=</span> minimal                      # 对于binlog_format <span class="token operator">=</span> <span class="token constant">ROW</span>模式时，减少记录日志的内容，只记录受影响的列

# <span class="token class-name">Innodb</span>设置
innodb_file_per_table<span class="token operator">=</span><span class="token number">1</span>
innodb_open_files <span class="token operator">=</span> <span class="token number">500</span>                        # 限制<span class="token class-name">Innodb</span>能打开的表的数据，如果库里的表特别多的情况，请增加这个。这个值默认是<span class="token number">300</span>
innodb_buffer_pool_size <span class="token operator">=</span> <span class="token number">64</span>M                  # <span class="token class-name">InnoDB</span>使用一个缓冲池来保存索引和原始数据，一般设置物理存储的<span class="token number">60</span><span class="token operator">%</span> <span class="token operator">~</span> <span class="token number">70</span><span class="token operator">%</span>；这里你设置越大<span class="token punctuation">,</span>你在存取表里面数据时所需要的磁盘<span class="token class-name">I</span><span class="token operator">/</span><span class="token class-name">O</span>越少
innodb_log_buffer_size <span class="token operator">=</span> <span class="token number">2</span>M                    # 此参数确定写日志文件所用的内存大小，以<span class="token class-name">M</span>为单位。缓冲区更大能提高性能，但意外的故障将会丢失数据。<span class="token class-name">MySQL</span>开发人员建议设置为<span class="token number">1</span>－<span class="token number">8</span>M之间
innodb_flush_method <span class="token operator">=</span> <span class="token constant">O_DIRECT</span>                  # <span class="token constant">O_DIRECT</span>减少操作系统级别<span class="token constant">VFS</span>的缓存和<span class="token class-name">Innodb</span>本身的buffer缓存之间的冲突
innodb_write_io_threads <span class="token operator">=</span> <span class="token number">4</span>                    # <span class="token constant">CPU</span>多核处理能力设置，根据读，写比例进行调整
innodb_read_io_threads <span class="token operator">=</span> <span class="token number">4</span>
innodb_lock_wait_timeout <span class="token operator">=</span> <span class="token number">120</span>                  # <span class="token class-name">InnoDB</span>事务在被回滚之前可以等待一个锁定的超时秒数。<span class="token class-name">InnoDB</span>在它自己的锁定表中自动检测事务死锁并且回滚事务。<span class="token class-name">InnoDB</span>用<span class="token constant">LOCK</span> <span class="token constant">TABLES</span>语句注意到锁定设置。默认值是<span class="token number">50</span>秒
innodb_log_file_size <span class="token operator">=</span> <span class="token number">32</span>M                      # 此参数确定数据日志文件的大小，更大的设置可以提高性能，但也会增加恢复故障数据库所需的时间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),l=[t];function r(c,i){return a(),n("div",null,l)}const u=s(p,[["render",r],["__file","mysql突然变慢排查.html.vue"]]);export{u as default};
