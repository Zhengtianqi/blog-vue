const e=JSON.parse('{"key":"v-32837462","path":"/posts/java/%E6%82%B2%E8%A7%82%E9%94%81%E3%80%81%E4%B9%90%E8%A7%82%E9%94%81.html","title":"悲观锁、乐观锁","lang":"zh-CN","frontmatter":{"title":"悲观锁、乐观锁","author":"郑天祺","tag":["锁","mysql"],"category":["数据库"],"date":"2019-08-31T13:16:00.000Z","description":"1、悲观锁 假设会发生并发冲突，屏蔽一切可能违反数据完整性的操作（具有强烈的独占和排他性） ​ 依赖数据库的锁机制实现，以保证操作最大程度的独占性。 ​ 百度百科：正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态。悲观锁的实现，往往依靠数据库提供的锁机制（也只有数据库层提供的锁机制才能真正保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系统不会修改数据）。 2、缺点","head":[["meta",{"property":"og:url","content":"https://zhengtianqi.gitee.io/blog-vue/posts/java/%E6%82%B2%E8%A7%82%E9%94%81%E3%80%81%E4%B9%90%E8%A7%82%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"郑天祺的博客"}],["meta",{"property":"og:title","content":"悲观锁、乐观锁"}],["meta",{"property":"og:description","content":"1、悲观锁 假设会发生并发冲突，屏蔽一切可能违反数据完整性的操作（具有强烈的独占和排他性） ​ 依赖数据库的锁机制实现，以保证操作最大程度的独占性。 ​ 百度百科：正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态。悲观锁的实现，往往依靠数据库提供的锁机制（也只有数据库层提供的锁机制才能真正保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系统不会修改数据）。 2、缺点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T12:47:14.000Z"}],["meta",{"property":"article:author","content":"郑天祺"}],["meta",{"property":"article:tag","content":"锁"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:published_time","content":"2019-08-31T13:16:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T12:47:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"悲观锁、乐观锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-31T13:16:00.000Z\\",\\"dateModified\\":\\"2023-06-10T12:47:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑天祺\\"}]}"]]},"headers":[{"level":2,"title":"1、悲观锁","slug":"_1、悲观锁","link":"#_1、悲观锁","children":[]},{"level":2,"title":"2、缺点","slug":"_2、缺点","link":"#_2、缺点","children":[]},{"level":2,"title":"3、实现方法","slug":"_3、实现方法","link":"#_3、实现方法","children":[]},{"level":2,"title":"4、使用场景举例","slug":"_4、使用场景举例","link":"#_4、使用场景举例","children":[{"level":3,"title":"0、乐观锁：","slug":"_0、乐观锁","link":"#_0、乐观锁","children":[]},{"level":3,"title":"1、乐观锁：","slug":"_1、乐观锁","link":"#_1、乐观锁","children":[]},{"level":3,"title":"2、优缺点：","slug":"_2、优缺点","link":"#_2、优缺点","children":[]},{"level":3,"title":"3、步骤 :","slug":"_3、步骤","link":"#_3、步骤","children":[]}]}],"git":{"createdTime":1686401234000,"updatedTime":1686401234000,"contributors":[{"name":"zhengtianqi","email":"270490096@qq.com","commits":1}]},"readingTime":{"minutes":3.84,"words":1153},"filePathRelative":"posts/java/悲观锁、乐观锁.md","localizedDate":"2019年8月31日","excerpt":"<h2> 1、悲观锁</h2>\\n<p>假设会发生并发冲突，屏蔽一切可能违反数据完整性的操作（具有强烈的独占和排他性）</p>\\n<p>​           依赖数据库的锁机制实现，以保证操作最大程度的独占性。</p>\\n<p>​     百度百科：正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，在整个数据处理过程中，将数据处于锁定状态。悲观锁的实现，往往依靠数据库提供的锁机制（也只有数据库层提供的锁机制才能真正保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系统不会修改数据）。</p>\\n<h2> 2、缺点</h2>","autoDesc":true}');export{e as data};
