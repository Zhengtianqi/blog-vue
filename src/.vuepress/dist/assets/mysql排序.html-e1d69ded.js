import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as p}from"./app-0ce632a0.js";const t="/blog-vue/assets/images/mysql排序1.png",c="/blog-vue/assets/images/mysql排序2.png",e="/blog-vue/assets/images/mysql排序3.png",o="/blog-vue/assets/images/mysql排序4.png",l="/blog-vue/assets/images/mysql排序5.png",i="/blog-vue/assets/images/mysql排序6.png",u={},k=p('<h1 id="_1、正常的数字排序" tabindex="-1"><a class="header-anchor" href="#_1、正常的数字排序" aria-hidden="true">#</a> 1、正常的数字排序</h1><figure><img src="'+t+'" alt="image-20191120204232822" tabindex="0" loading="lazy"><figcaption>image-20191120204232822</figcaption></figure><h1 id="_2、排序中文时" tabindex="-1"><a class="header-anchor" href="#_2、排序中文时" aria-hidden="true">#</a> 2、排序中文时</h1><p>，就是出现问题</p><figure><img src="'+c+'" alt="image-20191120204352223" tabindex="0" loading="lazy"><figcaption>image-20191120204352223</figcaption></figure><p>​ 这是因为我们在选取排序规则时，选择的不是gbk。所以想要正确的排序，需要我们了解我们选取字段的排序规则。</p><h1 id="_3、现在改成gbk-chinese-ci" tabindex="-1"><a class="header-anchor" href="#_3、现在改成gbk-chinese-ci" aria-hidden="true">#</a> 3、现在改成gbk_chinese_ci</h1><p>，ci是不区分大小写</p><figure><img src="'+e+'" alt="image-20191120204623652" tabindex="0" loading="lazy"><figcaption>image-20191120204623652</figcaption></figure><p>这样的话，结果：</p><figure><img src="'+o+'" alt="image-20191120204719806" tabindex="0" loading="lazy"><figcaption>image-20191120204719806</figcaption></figure><h1 id="_4、英中排序" tabindex="-1"><a class="header-anchor" href="#_4、英中排序" aria-hidden="true">#</a> 4、英中排序</h1><figure><img src="'+l+'" alt="image-20191120205015864" tabindex="0" loading="lazy"><figcaption>image-20191120205015864</figcaption></figure><p>​ 这个也是gbk的排序效果，但是我们想做到中英混搭的效果，我认为可以自已在mysql编译前放进自己的排序规则，</p><h1 id="_5、中文混搭" tabindex="-1"><a class="header-anchor" href="#_5、中文混搭" aria-hidden="true">#</a> 5、中文混搭</h1><p>先看一下效果：</p><figure><img src="'+i+`" alt="image-20191120205433980" tabindex="0" loading="lazy"><figcaption>image-20191120205433980</figcaption></figure><p>我们sql用引入了一个函数GET_FIRST_PINYIN_CHAR</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">SELECT</span>
	a<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
	a<span class="token punctuation">.</span>username 
<span class="token constant">FROM</span>
	test <span class="token constant">AS</span> a 
<span class="token constant">ORDER</span> <span class="token class-name">BY</span>
	<span class="token function">GET_FIRST_PINYIN_CHAR</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>username<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个函数需要在创建表之后定义，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">DROP</span> <span class="token constant">FUNCTION</span> <span class="token constant">IF</span> <span class="token constant">EXISTS</span> \`<span class="token constant">GET_FIRST_PINYIN_CHAR</span>\`<span class="token punctuation">;</span>
<span class="token constant">CREATE</span> <span class="token constant">FUNCTION</span> \`<span class="token constant">GET_FIRST_PINYIN_CHAR</span>\`<span class="token punctuation">(</span><span class="token class-name">PARAM</span> <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">RETURNS</span> <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token constant">CHARSET</span> utf8
<span class="token constant">BEGIN</span>
    <span class="token constant">DECLARE</span> <span class="token class-name">V_RETURN</span> <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">DECLARE</span> <span class="token class-name">V_FIRST_CHAR</span> <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SET</span> <span class="token constant">V_FIRST_CHAR</span> <span class="token operator">=</span> <span class="token function">UPPER</span><span class="token punctuation">(</span><span class="token function">LEFT</span><span class="token punctuation">(</span><span class="token constant">PARAM</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">SET</span> <span class="token constant">V_RETURN</span> <span class="token operator">=</span> <span class="token constant">V_FIRST_CHAR</span><span class="token punctuation">;</span>
    <span class="token class-name">IF</span> <span class="token function">LENGTH</span><span class="token punctuation">(</span> <span class="token constant">V_FIRST_CHAR</span><span class="token punctuation">)</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token function">CHARACTER_LENGTH</span><span class="token punctuation">(</span><span class="token constant">V_FIRST_CHAR</span><span class="token punctuation">)</span> <span class="token constant">THEN</span>
    <span class="token class-name">SET</span> <span class="token constant">V_RETURN</span> <span class="token operator">=</span> <span class="token function">ELT</span><span class="token punctuation">(</span><span class="token function">INTERVAL</span><span class="token punctuation">(</span><span class="token function">CONV</span><span class="token punctuation">(</span><span class="token function">HEX</span><span class="token punctuation">(</span><span class="token function">LEFT</span><span class="token punctuation">(</span><span class="token function">CONVERT</span><span class="token punctuation">(</span><span class="token constant">PARAM</span> <span class="token class-name">USING</span> gbk<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token number">0xB0A1</span><span class="token punctuation">,</span><span class="token number">0xB0C5</span><span class="token punctuation">,</span><span class="token number">0xB2C1</span><span class="token punctuation">,</span><span class="token number">0xB4EE</span><span class="token punctuation">,</span><span class="token number">0xB6EA</span><span class="token punctuation">,</span><span class="token number">0xB7A2</span><span class="token punctuation">,</span><span class="token number">0xB8C1</span><span class="token punctuation">,</span><span class="token number">0xB9FE</span><span class="token punctuation">,</span><span class="token number">0xBBF7</span><span class="token punctuation">,</span>
        <span class="token number">0xBFA6</span><span class="token punctuation">,</span><span class="token number">0xC0AC</span><span class="token punctuation">,</span><span class="token number">0xC2E8</span><span class="token punctuation">,</span><span class="token number">0xC4C3</span><span class="token punctuation">,</span><span class="token number">0xC5B6</span><span class="token punctuation">,</span><span class="token number">0xC5BE</span><span class="token punctuation">,</span><span class="token number">0xC6DA</span><span class="token punctuation">,</span><span class="token number">0xC8BB</span><span class="token punctuation">,</span>
        <span class="token number">0xC8F6</span><span class="token punctuation">,</span><span class="token number">0xCBFA</span><span class="token punctuation">,</span><span class="token number">0xCDDA</span><span class="token punctuation">,</span><span class="token number">0xCEF4</span><span class="token punctuation">,</span><span class="token number">0xD1B9</span><span class="token punctuation">,</span><span class="token number">0xD4D1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;F&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;G&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;H&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;J&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;K&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;L&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;N&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;O&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;P&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;Q&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;R&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;S&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;T&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;W&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;X&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;Y&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">END</span> <span class="token constant">IF</span><span class="token punctuation">;</span>
    <span class="token class-name">RETURN</span> <span class="token constant">V_RETURN</span><span class="token punctuation">;</span>
<span class="token constant">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个函数创建成功后，会显示ok。有些时候不成功，可能是没有打开创建函数的权限。</p><p>需要在mysql配置文件中打开 log_bin_trust_function_creators</p>`,23),r=[k];function m(d,g){return s(),a("div",null,r)}const v=n(u,[["render",m],["__file","mysql排序.html.vue"]]);export{v as default};
