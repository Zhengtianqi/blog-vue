const t=JSON.parse('{"key":"v-93c4c91e","path":"/posts/java/%E9%98%BB%E5%A1%9E%E9%94%81.html","title":"阻塞锁","lang":"zh-CN","frontmatter":{"title":"阻塞锁","author":"郑天祺","tag":["锁"],"category":["java基础"],"date":"2019-08-31T13:00:00.000Z","description":"阻塞锁 1、阻塞锁优势 ​\\t与自旋锁不同，改变了线程的运行状态。 ​ 在JAVA环境中，线程Thread有如下几个状态： 新建状态 就绪状态 运行状态 阻塞状态 死亡状态 ​ 阻塞锁，可以说是让线程进入阻塞状态进行等待，当获得相应的信号（唤醒，时间） 时，才可以进入线程的准备就绪状态，准备就绪状态的所有线程，通过竞争，进入运行状态。 ​ JAVA中，能够进入 / 退出、阻塞状态或包含阻塞锁的方法有 ，synchronized 关键字（其中的重量锁），ReentrantLock，Object.wait() / notify() ，LockSupport.park() / unpart()","head":[["meta",{"property":"og:url","content":"https://zhengtianqi.gitee.io/blog-vue/posts/java/%E9%98%BB%E5%A1%9E%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"郑天祺的博客"}],["meta",{"property":"og:title","content":"阻塞锁"}],["meta",{"property":"og:description","content":"阻塞锁 1、阻塞锁优势 ​\\t与自旋锁不同，改变了线程的运行状态。 ​ 在JAVA环境中，线程Thread有如下几个状态： 新建状态 就绪状态 运行状态 阻塞状态 死亡状态 ​ 阻塞锁，可以说是让线程进入阻塞状态进行等待，当获得相应的信号（唤醒，时间） 时，才可以进入线程的准备就绪状态，准备就绪状态的所有线程，通过竞争，进入运行状态。 ​ JAVA中，能够进入 / 退出、阻塞状态或包含阻塞锁的方法有 ，synchronized 关键字（其中的重量锁），ReentrantLock，Object.wait() / notify() ，LockSupport.park() / unpart()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T12:47:14.000Z"}],["meta",{"property":"article:author","content":"郑天祺"}],["meta",{"property":"article:tag","content":"锁"}],["meta",{"property":"article:published_time","content":"2019-08-31T13:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T12:47:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阻塞锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-31T13:00:00.000Z\\",\\"dateModified\\":\\"2023-06-10T12:47:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑天祺\\"}]}"]]},"headers":[{"level":2,"title":"1、阻塞锁优势","slug":"_1、阻塞锁优势","link":"#_1、阻塞锁优势","children":[]},{"level":2,"title":"2、阻塞锁的优势：","slug":"_2、阻塞锁的优势","link":"#_2、阻塞锁的优势","children":[]},{"level":2,"title":"3、阻塞锁应用：","slug":"_3、阻塞锁应用","link":"#_3、阻塞锁应用","children":[]},{"level":2,"title":"4、阻塞锁的简单实现：","slug":"_4、阻塞锁的简单实现","link":"#_4、阻塞锁的简单实现","children":[{"level":3,"title":"5、demo：","slug":"_5、demo","link":"#_5、demo","children":[]}]}],"git":{"createdTime":1686401234000,"updatedTime":1686401234000,"contributors":[{"name":"zhengtianqi","email":"270490096@qq.com","commits":1}]},"readingTime":{"minutes":2.78,"words":834},"filePathRelative":"posts/java/阻塞锁.md","localizedDate":"2019年8月31日","excerpt":"<h1> 阻塞锁</h1>\\n<h2> 1、阻塞锁优势</h2>\\n<p>​\\t与自旋锁不同，改变了线程的运行状态。</p>\\n<p>​    在JAVA环境中，线程Thread有如下几个状态：</p>\\n<ol>\\n<li>新建状态</li>\\n<li>就绪状态</li>\\n<li>运行状态</li>\\n<li>阻塞状态</li>\\n<li>死亡状态</li>\\n</ol>\\n<p>​      阻塞锁，可以说是让线程进入阻塞状态进行等待，当获得相应的信号（唤醒，时间） 时，才可以进入线程的准备就绪状态，准备就绪状态的所有线程，通过竞争，进入运行状态。\\n​       JAVA中，能够进入 / 退出、阻塞状态或包含阻塞锁的方法有 ，synchronized 关键字（其中的重量锁），ReentrantLock，Object.wait() / notify() ，LockSupport.park() / unpart()</p>","autoDesc":true}');export{t as data};
